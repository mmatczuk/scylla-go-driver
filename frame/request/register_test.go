package request

import (
	"scylla-go-driver/frame"
	"testing"

	"github.com/google/go-cmp/cmp"
)

func TestRegister(t *testing.T) {
	var testCases = []struct {
		name     string
		content  frame.StringList
		expected []byte
	}{
		{"Should encode and decode",
			frame.StringList{"TOPOLOGY_CHANGE", "STATUS_CHANGE", "SCHEMA_CHANGE"},
			[]byte{0x00, 0x03, 0x00, 0x0f, 0x54, 0x4f, 0x50, 0x4f, 0x4c, 0x4f, 0x47, 0x59, 0x5f, 0x43,
				0x48, 0x41, 0x4e, 0x47, 0x45, 0x00, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
				0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x00, 0x0d, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41,
				0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45},
		},
	}
	t.Parallel()
	var out frame.Buffer
	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			r := Register{tc.content}
			r.WriteTo(&out)
			if diff := cmp.Diff(out.Bytes(), tc.expected); diff != "" {
				t.Fatal(diff)
			}
		})
		out.Reset()
	}
}
